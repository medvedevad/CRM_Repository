//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRM
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CRM_magEntities : DbContext
    {
        public CRM_magEntities()
            : base("name=CRM_magEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BSO> BSO { get; set; }
        public virtual DbSet<Ed_izm> Ed_izm { get; set; }
        public virtual DbSet<Postavshiki> Postavshiki { get; set; }
        public virtual DbSet<Request_buhg> Request_buhg { get; set; }
        public virtual DbSet<Sotrudniki> Sotrudniki { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Vozvrat_mater1> Vozvrat_mater1 { get; set; }
        public virtual DbSet<Vozvrat_mater2> Vozvrat_mater2 { get; set; }
        public virtual DbSet<Vydacha_mater1> Vydacha_mater1 { get; set; }
        public virtual DbSet<Vydacha_mater2> Vydacha_mater2 { get; set; }
        public virtual DbSet<Kind_of_work> Kind_of_work { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<G_Schetchik> G_Schetchik { get; set; }
        public virtual DbSet<H_Schetchik> H_Schetchik { get; set; }
        public virtual DbSet<Teplo_Schetchik> Teplo_Schetchik { get; set; }
        public virtual DbSet<Request_snab> Request_snab { get; set; }
        public virtual DbSet<Montazhniki> Montazhniki { get; set; }
        public virtual DbSet<Perenos_request> Perenos_request { get; set; }
        public virtual DbSet<Client> Client { get; set; }
        public virtual DbSet<Adr_installation> Adr_installation { get; set; }
        public virtual DbSet<Metro> Metro { get; set; }
        public virtual DbSet<tEdIzm> tEdIzm { get; set; }
        public virtual DbSet<FullRequest> FullRequest { get; set; }
        public virtual DbSet<RequestList> RequestList { get; set; }
        public virtual DbSet<dbo_Metro> dbo_Metro { get; set; }
        public virtual DbSet<vMaterialy> vMaterialy { get; set; }
        public virtual DbSet<Prihod1> Prihod1 { get; set; }
        public virtual DbSet<Prihod2> Prihod2 { get; set; }
        public virtual DbSet<Rashod1> Rashod1 { get; set; }
        public virtual DbSet<Materialy> Materialy { get; set; }
        public virtual DbSet<tmp_OborotkaSklad> tmp_OborotkaSklad { get; set; }
        public virtual DbSet<Params> Params { get; set; }
        public virtual DbSet<Request_reception> Request_reception { get; set; }
        public virtual DbSet<Request_attachment> Request_attachment { get; set; }
        public virtual DbSet<Rashod_2> Rashod_2 { get; set; }
    
        public virtual ObjectResult<spInventVed_Result> spInventVed(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInventVed_Result>("spInventVed", dateParameter);
        }
    
        public virtual int spOborotkaSklad(Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd)
        {
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("dateBegin", dateBegin) :
                new ObjectParameter("dateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spOborotkaSklad", dateBeginParameter, dateEndParameter);
        }
    
        public virtual int spOborMont(Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd, Nullable<int> idMont)
        {
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("dateBegin", dateBegin) :
                new ObjectParameter("dateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            var idMontParameter = idMont.HasValue ?
                new ObjectParameter("idMont", idMont) :
                new ObjectParameter("idMont", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spOborMont", dateBeginParameter, dateEndParameter, idMontParameter);
        }
    
        public virtual ObjectResult<spOtkazy_Result> spOtkazy(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOtkazy_Result>("spOtkazy", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<spProizvodOtdel1_Result> spProizvodOtdel1(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProizvodOtdel1_Result>("spProizvodOtdel1", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<ClientView_Result> ClientView(Nullable<int> idClient)
        {
            var idClientParameter = idClient.HasValue ?
                new ObjectParameter("idClient", idClient) :
                new ObjectParameter("idClient", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientView_Result>("ClientView", idClientParameter);
        }
    
        public virtual ObjectResult<spOstatok_Result> spOstatok(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spOstatok_Result>("spOstatok", dateParameter);
        }
    }
}
